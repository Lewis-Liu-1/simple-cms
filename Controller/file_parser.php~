<?php
interface ISectionParser
{
	public function isSectionFinished();
}

class MySectionParser implements ISectionParser
{
	function  __construct()
	{
	}
	public function isSectionFinished(){return true;}
}

class CParser extends MySectionParser{}
class CPlusParser extends MySectionParser{}
class CSharpParser extends MySectionParser{}
class JavaParser extends MySectionParser{}
class AsmParser extends MySectionParser{}
class CMDParser extends MySectionParser{}
class LinkParser implements ISectionParser
{
	private $found;
	function  __construct()
	{
		$this->found=0;
	}
			
	public function isSectionFinished(){return true;}
	public function convert_keyword($s)
	{
		$this->found++;
		$s=$this->updateLink($s);
		return $s;
	}	

   function updateLink($s)
   {
   	$ret=$s;
		switch ($this->found)
		{
			case 2: 
				echo "<div class=\"atlink\"><a href=\"".trim($s)."\">";
				break;
			case 3:
				echo "$s</a></div>";
				$this->found=0;		
				break;
		}		
	   return $ret;
   }
}

class img_parser implements ifile_parser
{
	public $print;
	private $hyperlink_found;
	function  __construct()
	{
		$this->print=false;
		$this->hyperlink_found=0;
	}
			
	public function get_css_name() {return 'hyperlink';}
	public function is_section_finished(){return true;}
	public function convert_keyword($s)
	{
		$this->print=false;
		$this->hyperlink_found++;
		$s=$this->update_link($s);
		return $s;
	}	

   function update_link($s)
   {
   	$ret=$s;
   	//echo $s."->".$this->hyperlink_found."<br/>";
		switch ($this->hyperlink_found)
		{
			case 2: 
				echo "<img src=\"".trim($s)."\" width='500px' height='300px'/>";
				$this->hyperlink_found=0;		
				break;
			case 3:
				//echo "$s</a></div>";
				break;
		}		
	   return $ret;
   }
}
?>