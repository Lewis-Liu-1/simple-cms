<?php
	
	require_once('section.php');
	require_once('section_names.php');

	class TestSection extends MySection
	{
		private $var;
		private $items;
		private $step;		
		
		private $key;

		var $ob;
		var $obTitles;
		var $testItems;
		function recreate()
		{
			$this->testItems=array();
			$this->obTitles=array();
			$this->step=new StepSection();
			 
			$this->ob=new TestSectionNames();
			$a=getConstants($this->ob);
			$c=(array_values($a));
			$b=get_class_vars('TestSectionNames');
			$d=array_keys($b);

			$this->items = array_map(null,$c,$d);
			foreach ($this->items as $key =>$value)
			{
				if (is_array($value))
				{ 
					//echo $value[0],"->". $value[1]. "<br/>";
				}		
			}
			
			foreach($this->getData() as $s)
			{
				$this->getContent($s);
			}
			//var_dump($this->obTitles);
		}
	
		function getContent($s)
		{
			$done=true;
			foreach ($this->items as $key => $v) 
			{
				$count=preg_match("/".$v[0]."/i", $s, $matches);
				//echo "$s to match [$v[0]]<br/>";
				//echo "matches: ". var_dump($matches);
				//echo "<br/>";
				if ($count>0)
				{ 
					//echo "$s to match [$v[0]]<br/>";
					//echo "<b>".$matches[1]." ; ".$matches[2]."</b>";
					$this->var =	&$this->ob->$v[1];
					$this->var = ($matches[2]);
					$this->obTitles[$v[0]]=$matches[1];					
					$done=false;	
					break;
				}
			}
			
			if ($done)
			{
				if ($this->isTestStep($s)) $done=false;	
			}			

			if ($done)
			{
				if (strlen(trim($s))>0)
			 		$this->var.=($s);	
			}	
		}
		
		private function isTestStep($s)
		{
			$count=preg_match("/".StepSection::STEP."/i", $s, $matches);
			if ($count>0)
			{
				$this->step=new StepSection();
				$this->step->desc=$matches[2];
				$this->testItems[]=$this->step;
				//echo "<b>step ".$matches[1]."</b>".$this->step->desc."<br/>end<br/>";
				return true;
			}
			$count=preg_match("/".StepSection::EXPECT."/i", $s, $matches);
			if ($count>0)
			{						
				$this->step->expected=$matches[1];				
				//echo $this->step->desc." <----from expected <br/>";
				return true;	
			}
							
		}		
		/*
		private function R($s)
		{
			$s=trim($s);
			//$s=str_replace(" ","&nbsp;",$s);
			return $s;
		}
		
		private function print_me()
		{
			echo "<div class='".$this->get_css_name()."'>";
			echo "<table class='customers'>\n";
			echo "<tr>";
  			echo "<th>Information</th>";
  			echo "<th></th>";
			echo "</tr>";
			for($i=0;$i<$this->StepStart-1;$i++)
			{
				echo "<tr>";
				echo "<td>";				
				echo $this->Items[$i];
				echo "</td>\n";
				echo "<td class=\"says\">";				
				echo trim($this->Variables[$i]);
				echo "</td>\n";
				echo "</tr>";
			} 
			echo "</table>\n";
			echo "</div>";
			
			
			echo "<table class='customers'>\n";
			echo "<tr>";
  			echo "<th>Steps</th>";
  			echo "<th></th>";
			echo "</tr>";
			for($i=0;$i<count($this->Expected);$i++)
			{
				$j=$i+$this->StepStart;
				$class='';				
				if ($i %2==0 ) $class='alt';		
				echo "<tr class=\"$class\">";
				//step test
					echo "<td>";
						echo $this->Items[$j];
					echo "</td>";
					echo "<td>";
						echo trim($this->Variables[$j]);
					echo "</td>";
				echo "</tr><tr class=\"$class\">";
					echo "<td>";
						echo "Expected";
					echo "</td>";
					echo "<td>";
						echo trim($this->Expected[$i]);
					echo "</td>";
				echo "</tr>";
			}
			echo "</table>\n";
		} 
		
		public function get_css_name() 
		{	
			//$this->subsection=false;
			$ret='test';
			$this->count++;
			$this->done=false;
			if ($this->count % 2 ==0)
			{
				$ret='test test1';
			}
			return $ret;
		}
		
		public function is_section_finished(){return $this->done;}
		
		public function convert_keyword($s)
		{
			$this->print=true;
			$s=$this->get_start($s);
			$s=$this->get_content($s);
			return $s;
		}
		
		function find_pat($s,$v)
		{
			$pos = strpos($s,$v);
			if ($pos!==false)
			{ 
				if ($pos==0)
					return true;
			}
			return false;		
		}

		function get_start($s)
		{
			$ret=$s;
			$this->print = true;
			
			$pos1 = $this->find_pat($s,self::CSECTION_START);
			$pos2 = $this->find_pat($s,self::CSECTION_END);
			if ($pos2)
			{
				if ($this->start)
				{
					$this ->print_me();
					$this->start=false;
					$this->done=true;
					$this->print = false;
					$ret="";
				}
			}
			
			if ($pos1)
			{ 
				$this->Expected=array();
				$this->start=true;
				$this->print = false;
				$ret="";
			}
			
			return $ret;
		}
	
		function get_content($s)
		{
			$ret=$s;
			$this->print = true;
			
			for($i=0;$i<count($this->Items);$i++) 
			{
				$key=$this->Items[$i];
				$pos = strpos($s,$key.":");
				if ($pos!==false)
				{ 
					if ($pos==0)
					{
						$m=str_replace($key.":","",$s);
						$this->Var =	&$this->Variables[$i];
						$this->Var =trim($m);
						if (strcmp($key,"Exp result")==0)
						{
							$this->Expected[]=$this->Var;
						}	
						$this->print = false;
						$ret="";
					}
					break;
				}
			}
			
			if ($this->print)
			{
				$this->print = false;
				if (strlen(trim($s))>0)
			 		$this->var.=($s);	
			}	
			return $ret;	
		}
		*/
	}
?>
