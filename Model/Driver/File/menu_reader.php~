<?php

	class MenuReader
	{
		function populateMenus()
		{
			$absolute=RootDir.DataDir;
			$relative=DataDir;
			
			$ret=$this->populateSubMenus($absolute,$relative);
			return $ret;
		}
		
		function populateSubMenus($absolute,$relative)
		{
			$ret=array();
			$i=0;
         //echo "$absolute => $relative"."<br/>";
			
			if ($handle = opendir($absolute)) 
			{
		   	while (false !== ($file = readdir($handle))) 
		   	{
					if ($this->noNeedCheck($file)) continue;
					$s=$relative."/".$file;
					if (is_dir($absolute."/".$file))
					{
						$a=$absolute."/".$file;
						$r=$relative."/".$file;
						//$key=$this->translate(basename($s));
						if (strcmp($file,CommentDirName)!=0)
						{
							$ret[basename($s)]=$this->populate_submenus($a,$r);
						}
						//$ret[$s]=$this->translate($file);
					}
					else
					{
						$ret[$file]="file:".$i;
						$i++;
					}
			        			
				}
			   closedir($handle);
				$order = $this->readOrder($relative);
	
				if (count($order) > 1)
				   $ret=$this->sortFiles($ret,$order);
			}
			return $ret;						
		}
		
		public function isFile($a)
		{
			$filename=implode("/", $a);
			$filename=RootDir.DataDir.'/'.$filename;
			
			if (is_dir($filename)) return false;
			//echo "File to show $f<br/>";
			return true;
		}
		
		function readOrder($path)
		{
			$order=array();			 			
			$filename=RootDir.$path."/".IndexFileName;
			
			if (file_exists($filename)==false) return $order;
			$file = fopen($filename,"r");
						
			if ($file == false) return $order;
			//echo "read_order $filename<br/>";
			//Output a line of the file until the end is reached
			while(!feof($file))
  			{
  				$line=fgets($file);
  				if (strlen(trim($line))>0)
	  				$order[]=$line;
  			}
			fclose($file);
			return $order;			
		}
		
		function sortFiles($array,$order)
		{
			//var_dump($array);			
			$ret=array();
			foreach($order as $val)
			{
				foreach($array as $key =>$value)				
				//if (array_key_exists($val, $array)) 
				{
					if (strcasecmp(trim($key),trim($val))==0)
					{
						$ret[$key]=$value;
						unset($array[$key]);
					}
				//	var_dump($val);
				}
			}
			
			foreach($array as $key =>$value)
			{
				$ret[$key]=$value;				
			}
						
			return $ret;
		}		
		
		function noNeedCheck($f)
		{
			if ($f =="." || $f ==".." || $f ==IndexFileName
				|| $f =='index.php' )
				return true;
			return false;		
		}
	}

?>